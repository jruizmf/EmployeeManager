@model DataAccessLayer.models.Payroll

@{
    ViewBag.Title = "Modificar";
}

<h2 style="color: #C61A2180;">Modificar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal py-1">
        <h4>Payroll</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group py-1">
            @Html.LabelFor(model => model.EmployeeId, "EmployeeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group py-1">
            @Html.LabelFor(model => model.Week, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Week, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Week, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            @Html.LabelFor(model => model.HoursWorked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoursWorked, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoursWorked, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group py-1">
            @Html.LabelFor(model => model.total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.total, new { disabled = "disabled", @readonly = "readonly", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.total, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group py-1">
            <div class="row">
                <div class="col-md-offset-2 col-md-4">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                </div>
                <div class="col-md-offset-2 col-md-4">
                    @Html.ActionLink("Volver", "Index", new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            var EmployeeInput = $("#EmployeeId");
            var input2 = document.getElementById('total');
            var hours = $("#HoursWorked")
            var hourValue = 0;
            console.log(EmployeeId)
            var EmployeeValue = EmployeeInput.val();

            if (hours.val() != "") {
                hourValue = hours.val()
            }

            EmployeeInput.on('change', function () {
                EmployeeValue = $(this).val();
                console.log(EmployeeId)
                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: '/api/Payrolls/CalculateTotal/' + $(this).val() + '/' + hourValue,
                    success: function (data) {
                        input2.value = data;
                    },
                    error: function (xhr, ajaxOption, thorwnError) {
                        console.log("Error")
                    },
                });
            });

            hours.on('change', function () {
                hourValue = $(this).val();
                console.log(EmployeeId)
                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: '/api/Payrolls/CalculateTotal/' + EmployeeValue + '/' + hourValue,
                    success: function (data) {
                        console.log(data);
                        input2.value = data;
                    },
                    error: function (xhr, ajaxOption, thorwnError) {
                        console.log("Error")
                    },
                });
            });
        });
    </script>
}