@model DataAccessLayer.models.Employee

@{
    ViewBag.Title = "Agregar";
}

<h2>Agregar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color: #C61A2180;">Empleado</h4>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group py-1">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            @Html.LabelFor(model => model.Secondlastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Secondlastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Secondlastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            @Html.LabelFor(model => model.RFC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RFC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RFC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeTypeId, "EmployeeTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 py-1">
                @Html.DropDownList("EmployeeTypeId", null, "Seleccionar tipo de empleado", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmployeeTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group py-1">
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @type = "date", @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            @Html.LabelFor(model => model.SalaryPerHour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalaryPerHour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalaryPerHour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            @Html.LabelFor(model => model.HoursWorked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoursWorked, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoursWorked, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group py-1">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-offset-2 col-md-4">
                        <input type="submit" value="Guardar" class="btn btn-primary" />
                    </div>
                    <div class="col-md-offset-2 col-md-4">
                        @Html.ActionLink("Volver", "Index", new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            var EmployeeType = $("#EmployeeTypeId");
            var hours = $("#HoursWorked")
            var EmployeeValue = EmployeeType.val();

            if (EmployeeType.val() == "") {
                hourValue = 0
            } 
            EmployeeType.on('change', function () {
                EmployeeValue = $(this).val();
                console.log(EmployeeValue)
                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: '/api/EmployeeTypes/' + EmployeeValue,
                    success: function (data) {
                        hours.val(data.HoursWorked);
                    },
                    error: function (xhr, ajaxOption, thorwnError) {
                        console.log("Error")
                    },
                });
            });
        });
    </script>
}
